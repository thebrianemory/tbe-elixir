<section class="projects-section" id="projects">
  <div class="container">
    <div class="row">
      <div class="col-lg-10 col-md-offset-1">
        <div class="hr-section">
          <big class="section-header">
              Projects
          </big>
        </div>
          <!-- For first row of projects -->
          <div class="row">
            <div class="col-md-4">
              <h3>
                GetMedium <%= link "GitHub", to: "https://github.com/thebrianemory/get-medium", target: "_blank", class: "btn btn-xs custom-btn" %>
              </h3>
              <%= static_path(@conn, "/images/port-getmedium.png")
                  |> img_tag(class: "img-responsive project-image")
                  |> link(to: "https://github.com/thebrianemory/get-medium", target: "_blank") %>
              <p class="text-left">
                GetMedium is an Elixir package to solve the problem of Medium's API not having a way to get your blog posts. Medium's API currently only allows posting to your blog which is a problem for those of us who want to display all or part of our recent posts on our personal site. GetMedium returns a truncated version of your Medium blog posts.
              </p>
            </div>
            <div class="col-md-4">
              <h3>
                Vidshare <%= link "GitHub", to: "https://github.com/thebrianemory/vidshare", target: "_blank", class: "btn btn-xs custom-btn" %>
              </h3>
              <%= static_path(@conn, "/images/port-vidshare.png")
                  |> img_tag(class: "img-responsive project-image")
                  |> link(to: "https://team-vidshare.herokuapp.com", target: "_blank") %>
              <p class="text-left">
                Vidshare is an Elixir/Phoenix port of my Rails app Flatcasts. I wanted to build something using Elixir/Phoenix so updating Flatcasts seemed like a great choice. Signed in users can add videos using just the URL from YouTube or Vimeo. It is the basis for my <%= link "Elixir tutorial on Medium", to: "https://medium.brianemory.com/elixir-phoenix-creating-an-app-part-1-the-setup-6626264be03", target: "_blank", class: "about-link" %> to create an Elixir/Phoenix app called Catcasts.
              </p>
            </div>
            <div class="col-md-4">
              <h3>
                Corneal <%= link "GitHub", to: "https://github.com/thebrianemory/corneal", target: "_blank", class: "btn btn-xs custom-btn" %>
              </h3>
              <%= static_path(@conn, "/images/port-corneal.jpg")
                  |> img_tag(class: "img-responsive project-image")
                  |> link(to: "https://github.com/thebrianemory/corneal", target: "_blank") %>
              <p class="text-left">
                Corneal is an open source Sinatra app generator with Rails-like simplicity. I wanted something as easy as <code>rails new app-name</code> for a project I was working on. Closest thing I found was a gem called Hazel. It was suggested to me to make my own. I forked Hazel and like that, Corneal was born. It was featured in <%= link "Ruby Weekly #353", to: "http://rubyweekly.com/issues/353", target: "_blank", class: "about-link" %>.
              </p>
            </div>
          </div>
      </div>
  </div>
</section>

